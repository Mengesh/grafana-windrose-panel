{"version":3,"file":"module.js","mappings":"2FAAAA,EAAOC,QAAUC,C,UCAjBF,EAAOC,QAAUE,C,UCAjBH,EAAOC,QAAUG,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaP,QAGrB,IAAID,EAASK,EAAyBE,GAAY,CAGjDN,QAAS,CAAC,GAOX,OAHAS,EAAoBH,GAAUP,EAAQA,EAAOC,QAASK,GAG/CN,EAAOC,OACf,CCrBAK,EAAoBK,EAAKX,IACxB,IAAIY,EAASZ,GAAUA,EAAOa,WAC7B,IAAOb,EAAiB,QACxB,IAAM,EAEP,OADAM,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACb,EAASe,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEjB,EAASgB,IAC5EE,OAAOC,eAAenB,EAASgB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAK3B,IACH,oBAAX4B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAenB,EAAS4B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAenB,EAAS,aAAc,CAAE8B,OAAO,GAAO,E,0FCEvD,MAAMC,EAAM,EAAGC,cAElB,kBAACC,IAAAA,KACED,GCLA,SAASE,EAAmBC,EAAqBC,EAAqBC,EAAuBC,EAAqBC,GACrH,IAAIC,EAAY,GAEZC,EAAYN,EAAcC,EAAc,EACxCM,EAAaP,EAAcC,EAAc,EAM7CI,GAJeG,KAAKC,IAAIH,GAAaH,EAAcD,EAAaQ,EAIxC,KAHTF,KAAKG,IAAIL,GAAaH,EAAcD,EAAaU,GAGvB,IACzCP,GAHgBG,KAAKC,IAAIH,GAAaF,EAAYF,EAAaQ,EAGtC,KAFTF,KAAKG,IAAIL,GAAaF,EAAYF,EAAaU,GAEpB,IAE3C,IAAIC,EAASL,KAAKM,GAAK,IACvB,IAAK,IAAIC,EAAIF,EAAQE,EAAId,EAAac,GAAKF,EAGvCR,GAFaG,KAAKC,IAAIM,EAAIT,GAAaF,EAAYF,EAAaQ,EAE1C,KADTF,KAAKG,IAAII,EAAIT,GAAaF,EAAYF,EAAaU,GAC3B,IAGzC,IAAII,EAAaR,KAAKC,IAAIF,GAAcJ,EAAcD,EAAaQ,EAC/DO,EAAaT,KAAKG,IAAIJ,GAAcJ,EAAcD,EAAaU,EAGnEP,GAFiBG,KAAKC,IAAIF,GAAcH,EAAYF,EAAaQ,EAEvC,KADTF,KAAKG,IAAIJ,GAAcH,EAAYF,EAAaU,GACpB,IAC7CP,GAAaW,EAAa,IAAMC,EAAa,IAE7C,IAAK,IAAIF,EAAIF,EAAQE,EAAId,EAAac,GAAKF,EAGvCR,GAFaG,KAAKC,IAAIF,EAAaQ,GAAKZ,EAAcD,EAAaQ,EAE7C,KADTF,KAAKG,IAAIJ,EAAaQ,GAAKZ,EAAcD,EAAaU,GAC9B,IAGzC,OAAOP,CACX,CAEO,SAASa,EAAgBC,EAAeC,EAAgBC,EAAiBC,EAAiBC,GAC7F,IAAIC,EAAeH,EAAOX,EAAIF,KAAKC,IAAIU,GAASC,EAAS,GACrDK,EAAeJ,EAAOX,EAAIF,KAAKC,IAAIU,GAASC,EAC5CM,EAAeL,EAAOT,EAAIJ,KAAKG,IAAIQ,GAASC,EAAS,GACrDO,EAAeN,EAAOT,EAAIJ,KAAKG,IAAIQ,GAASC,EAChD,OAAQ,kBAACQ,OAAAA,CAAKC,GAAIL,EAAcM,GAAIJ,EAAcK,GAAIN,EAAcO,GAAIL,EAAcM,YAAaX,EAAS,EAAI,EAAGY,OAAO,UAAUC,gBAAiBZ,EAAW,MAAQ,IAC5K,CC7CO,SAASa,EAAoBC,EAAwDC,EAAuEC,GAC/JD,GAAaE,IACT,IAAIC,EAAY,IAAID,GAGpB,OAFAC,EAAUF,GAAOG,mBAAqBD,EAAUF,GAAOI,oBACvDF,EAAUF,GAAOK,mBAAqBH,EAAUF,GAAOM,sBAChDJ,CAAS,GAKxB,CACO,SAASK,EAAoBT,EAAwDC,EAAuEC,GAC/JD,GAAaE,IACT,IAAIC,EAAY,IAAID,GAGpB,OAFAC,EAAUF,GAAOG,mBAAqBD,EAAUF,GAAOQ,gBACvDN,EAAUF,GAAOK,mBAAqBH,EAAUF,GAAOS,gBAChDP,CAAS,GAKxB,CAEO,SAASQ,EAAgBZ,EAAqDC,EAAuEC,GACxJD,GAAaE,IACT,IAAIC,EAAY,IAAID,GAGpB,OAFAC,EAAUF,GAAOG,mBAAqBD,EAAUF,GAAOI,oBACvDF,EAAUF,GAAOK,mBAAqBH,EAAUF,GAAOM,sBAChDJ,CAAS,GAExB,CACO,SAASS,EAAgBb,EAAqDC,EAAuEC,GACxJD,GAAaE,IACT,IAAIC,EAAY,IAAID,GAGpB,OAFAC,EAAUF,GAAOG,mBAAqBD,EAAUF,GAAOQ,gBACvDN,EAAUF,GAAOK,mBAAqBH,EAAUF,GAAOS,gBAChDP,CAAS,GAExB,CC4CO,MAAMU,EAAW,EAAGC,OAAMC,QAAOC,SAAQjC,SAAQD,SAAQmC,eAAcf,SAAQF,cAAakB,uBAAsBC,kBAAiBC,sBAAqBC,oBAE7J,IAAIC,EAAcL,EAEdM,EAA4B,GAE5BC,EAAYtD,KAAKM,GAAK8C,EAAc,EACxC,IAAK,IAAI7C,EAAI,EAAGA,EAAkB,EAAd6C,EAAiB7C,IAAK,CACxC,IAAII,EAAQ2C,EAAY/C,EAEpBO,EAAe,IAANP,GAAWA,IAAM6C,EAC9BC,EAAWE,KAAK7C,EAAgBC,EAAOC,EAAQC,EAAQC,GAAQ,IAC/DuC,EAAWE,KAAK7C,EAAgBC,EAAQX,KAAKM,GAAIM,EAAQC,EAAQC,GAAQ,GAC3E,CAEA,IAAI0C,EAAgBxD,KAAKM,GAAK4C,EAAsB,EAChDO,EAAiBzD,KAAKM,GAAK,IAC/B,IAAK,IAAIC,EAAI,EAAGA,EAA0B,EAAtB2C,EAAyB3C,IAAK,CAChD,IAAII,EAAQ6C,EAAgBjD,EAExBO,EAAe,IAANP,GAAWA,IAAM2C,EAC9BG,EAAWE,KAAK7C,EAAgBC,EAAOC,EAAQC,EAAQC,GAAQ,IAC/DuC,EAAWE,KAAK7C,EAAgBC,EAAQX,KAAKM,GAAIM,EAAQC,EAAQC,GAAQ,GAC3E,CAGAkC,EAAuBhD,KAAK0D,IAAI,EAAG1D,KAAK2D,MAAMX,IAE9C,IAAIY,EAA8B,GAC9BC,EAAuC,GACvCC,EAA4B,GAATlD,EACnBmD,EAAiC,GAATnD,EACxBoD,EAAUhE,KAAKM,GAAK,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIqC,EAAKgB,aAAaK,OAAQ1D,IAAK,CACjD,IAAI2D,EAActB,EAAKgB,aAAarD,GAChCf,GAAgB0E,EAAY1E,YAAc,KAAO,IAAOwE,EAExDG,EAAiBJ,EAEjBK,EAAwB,EAC5BF,EAAYG,aAAaC,SAAQ,CAACC,EAAaxC,KAC7C,IAAIpC,EAAcwE,EACdvE,EAAYuE,EAAiBL,EAAmBS,EAAYC,kBAChEL,EAAiBvE,EAEjB,IAGI6E,EAHAC,EAAkBnF,EAAmBC,EAAa8D,EAAYG,EAAgB5C,EAAQlB,EAAc,IAAKC,EAAY,KACrH+E,EAAc3C,EAAOuC,EAAYxC,OAInC0C,EADC1C,IAAUmC,EAAYG,aAAaJ,OAAO,EAC5B,kBAACW,MAAAA,KAAI,YAAaR,EAAsB,IAAEjB,GAE1C,kBAACyB,MAAAA,KAAI,UAAQR,EAAsB,IAAEG,EAAYM,gBAAgB,IAAE1B,GAGpF,IAAI2B,EAAiB,kBAACF,MAAAA,KACpB,kBAACA,MAAAA,KAAI,SAAM,kBAACG,IAAAA,KAAG/E,KAAK2D,MAAsC,IAAhCY,EAAYS,kBAA0BhF,KAAKiF,IAAI,GAAIjC,IAAyBhD,KAAKiF,IAAI,GAAIjC,GAAwB,MAC1IyB,GAEHL,EAAwBG,EAAYM,gBAEpCjB,EAAaL,KACX,kBAAC2B,EAAAA,QAAOA,CAACC,QAASL,GAChB,kBAACM,UAAAA,CAAQC,UAAWd,EAAYxC,MAAMuD,WACpCC,aAAe1D,IAAYD,EAAoBC,EAAOC,EAAayC,EAAYxC,MAAM,EAAIyD,aAAe3D,IAAYS,EAAoBT,EAAOC,EAAayC,EAAYxC,MAAM,EAC9K0D,OAAQf,EACRgB,KAAMf,EAAYzC,mBAAmByD,MAAOC,YAAajB,EAAYzC,mBAAmB2D,QACxFnE,OAAQiD,EAAYmB,mBAAmBpE,OAAQD,YAAakD,EAAYmB,mBAAmBrE,gBAGjGoC,EAAsBN,KACpB,kBAAC6B,UAAAA,CAAQC,UAAWd,EAAYxC,MAAMuD,WAClC5D,OAAQiD,EAAYvC,mBAAmBV,OAAQD,YAAakD,EAAYvC,mBAAmBX,YAC3FsE,MAAO,CAAEC,cAAe,QACxBP,OAAQf,EACRgB,KAAK,gB,GAGf,CAGA,IAAIO,EAAgC,GACpC,IAAK,IAAI1F,EAAI,EAAGA,EAAI0C,EAAgBgB,OAAQ1D,IAAK,CAC/C,IAAI2F,EAAQjD,EAAgB1C,GACxBI,GAASuF,EAAMvF,MAAQ,IAAMqD,EAC7BmC,EAAiBvF,EAASsF,EAAMH,MAAMK,aACtClG,EAAIW,EAAOX,EAAIF,KAAKC,IAAIU,GAASwF,EACjC/F,EAAIS,EAAOT,EAAIJ,KAAKG,IAAIQ,GAASwF,EACrCF,EAAe1C,KACb,kBAAC8C,OAAAA,CAAKnG,EAAGA,EAAGE,EAAGA,EAAG2F,MAAOG,EAAMH,MAAMO,IAAKC,iBAAiB,SAASC,WAAW,UAC5EN,EAAMG,MACb,CAEA,IAAII,EApHN,SAAoCnD,EAAmBM,EAA6B8C,GAClF,IAAI1C,EAAUhE,KAAKM,GAAG,IAClByC,EAAiC,EAAlB2D,EACfC,EAAa,IAAIC,MAAM7D,GAAc2C,KAAK,GAE9C9B,EAAaU,SAAQuC,IACnBF,EAAWE,EAAM9E,OAAS8E,EAAMC,gBAAgB,IAGlD,IAAIC,EAASJ,EAAW,GAAGA,EAAWA,EAAW1C,OAAO,GACpD+C,EAAW,EACf,IAAI,IAAIzG,EAAI,EAAGA,EAAIwC,EAAcxC,IAAI,CACnC,IAAI0G,EAASN,EAAWpG,EAAE,GACtB2G,EAASP,EAAWpG,GACrB0G,EAAOC,EAAOH,IACfA,EAASE,EAAOC,EAChBF,EAAWzG,EAEf,CAEA,OAAO+C,GAAa0D,EAAS,GAAK1D,EAAY,EAAI,GAAKU,CACzD,CA+F0BmD,CAA2B7D,EAAWV,EAAKgB,aAAcb,IAC5EqE,EAAcC,EAAiBC,GA1KtC,SAA2B1E,EAAoBhC,EAAgBC,EAAiB4F,GAE9E,IAAIW,EAA8B,GAO9BG,EAAsB,GAAT3G,EAJA,EAKjB,IAAK,IAAIL,EAAI,EAAGA,EALC,EAKeA,IAAK,CACnC,IAAIiH,EAAoB5G,GAAU,GAAK,GAAKL,EAN7B,GASf,GAFIA,EAAI,GAAK6G,EAAa7D,KAAK,kBAACkE,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAGwI,EAAmB7F,gBAAgB,GAAG+D,KAAK,cAAchE,OAAO,UAAUD,YAAY,QAExJb,EANqB,IAOvB,IAAK,IAAIgH,EAAI,EAAGA,EATA,EASmBA,IACjCJ,EAAoB5G,GAAU,GAAK,GAAKL,EAX7B,GAW+CgH,EAAaK,EAVzD,EAWdR,EAAa7D,KAAK,kBAACkE,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAGwI,EAAmB7F,gBAAgB,MAAM+D,KAAK,cAAchE,OAAO,UAAUD,YAAY,QAIxJ,CAGA,IAAI6F,EAA+B,GAE/BnH,EAAMH,KAAKG,IAAIsG,GACfxG,EAAMD,KAAKC,IAAIwG,GAEfoB,EAAW,GAAGjH,EArBS,IAuBvBkH,EAAY,UADO9H,KAAK+H,IAAI,GAAIF,kBAEpC,IAAK,IAAItH,EAAI,EAAGA,EA3BC,EA2BeA,IAAK,CACnC,IAAIyH,EAAiBpH,GAAUL,EA5BhB,EA4BiC,GAAK,IACjDL,EAAIW,EAAOX,EAAID,EAAM+H,EACrB5H,EAAIS,EAAOT,EAAID,EAAM6H,EACrBC,EAAUrF,EAAKsF,gBA/BJ,EA+BmC3H,EAAI,IAEtD+G,EAAc/D,KACZ,kBAAC8C,OAAAA,CAAKnG,EAAGA,EAAGE,EAAGA,EAAG2F,MAChB,CACEC,cAAe,OACfmC,KAAML,GAGRvB,iBAAiB,OAAOC,WAAW,SACnCxG,KAAK2D,MAAgB,GAAVsE,GAAgB,GAAK,KAEtC,CAEA,MAAO,CAACb,EA/C6B,GA+CEE,EACzC,CAuHuDc,CAAkBxF,EAAMhC,EAAQC,EAAQ4F,GAE7F,OACE,kBAAC7B,MAAAA,KACC,kBAACA,MAAAA,KACC,kBAACyD,MAAAA,CAAIxF,MAAOA,EAAOC,OAAQA,GACzB,kBAAC1D,EAAGA,KACF,kBAACqI,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAG4B,EAAQ8E,KAAK,YAEpD,kBAAC+B,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAY,GAAT4B,EAAa8E,KAAK,YACzD,kBAAC+B,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAG4B,EAAQ8E,KAAK,cAAchE,OAAO,UAAUD,YAAY,MAC/F,kBAACgG,SAAAA,CAAOC,GAAI7G,EAAOX,EAAGyH,GAAI9G,EAAOT,EAAGpB,EAAY,GAAT4B,EAAa8E,KAAK,cAAchE,OAAO,UAAUD,YAAY,MACpG,kBAACrC,EAAGA,KACDgI,GAEH,kBAAChI,EAAGA,KACDiE,GAEH,kBAACjE,EAAGA,KACDwE,GAEH,kBAACxE,EAAGA,KACDyE,GAEH,kBAACzE,EAAGA,KACDkI,GAEH,kBAAClI,EAAGA,KACD6G,GAEH,kBAAC7G,EAAGA,KACDiI,MAAAA,EChNR,SAASiB,EAAWC,EAAYC,EAAYC,GAE/C,OAAOF,GADIC,EAAKD,GACDE,CACnB,CAKO,SAASC,EAAS3K,GACrB,OAAOiC,KAAK0D,IAAI,EAAG1D,KAAK+H,IAAI,IAAKhK,GACrC,CCuCO,SAAS4K,EAAS3J,EAAWM,EAAWyF,GAC3C,MAAO,MAAQ,GAAK,KAAO/F,GAAK,KAAOM,GAAK,GAAKyF,GAAGO,SAAS,IAAIsD,MAAM,EAC3E,CAEO,SAASC,EAASC,EAAaC,EAAS,4CAA4CC,KAAKF,IAC5F,OAAOC,EAASA,EAAOE,KAAI1I,GAAK2I,SAAS3I,EAAG,MAAKqI,MAAM,GAAK,CAAC,EAAE,EAAE,EACrE,CAEO,SAASO,EAAexD,EAAeyD,GAC1C,IAAKpK,EAAEM,EAAEyF,GAAK8D,EAASlD,IAClB0D,EAAEC,EAAEC,GA1DN,SAAkBvK,EAAWM,EAAWyF,GAC3C/F,GAAK,IACLM,GAAK,IACLyF,GAAK,IAEL,IACWuE,EADP5F,EAAM1D,KAAK0D,IAAI1E,EAAGM,EAAGyF,GAAIgD,EAAM/H,KAAK+H,IAAI/I,EAAGM,EAAGyF,GAC9CsE,EAAI,EAAME,EAAI7F,EAEdxF,EAAIwF,EAAMqE,EAGd,GAFAuB,EAAY,IAAR5F,EAAY,EAAIxF,EAAIwF,EAEpBA,IAAQqE,EACRsB,EAAI,MACD,CACH,OAAQ3F,GACJ,KAAK1E,EAAGqK,GAAK/J,EAAIyF,GAAK7G,GAAKoB,EAAIyF,EAAI,EAAI,GAAI,MAC3C,KAAKzF,EAAG+J,GAAKtE,EAAI/F,GAAKd,EAAI,EAAG,MAC7B,KAAK6G,EAAGsE,GAAKrK,EAAIM,GAAKpB,EAAI,EAG9BmL,GAAK,CACT,CAEA,MAAO,CAACA,EAAGC,EAAGC,EAClB,CAkCkBC,CAASxK,EAAEM,EAAEyF,GAC3BwE,EAAIvJ,KAAK0D,IAAI,EAAG1D,KAAK+H,IAAI,EAAGwB,GAAG,EAAEH,EAAiB,KAClDE,EAAItJ,KAAK0D,IAAI,EAAG1D,KAAK+H,IAAI,EAAGuB,GAAG,EAAEF,KACjC,IAAKK,EAAGC,EAAGC,GAlCR,SAAkBN,EAAWC,EAAWC,GAC3C,IAAIvK,EAAI,EAAGM,EAAI,EAAGyF,EAAI,EAElBxE,EAAIP,KAAK4J,MAAU,EAAJP,GACfQ,EAAQ,EAAJR,EAAQ9I,EACZuJ,EAAIP,GAAK,EAAID,GACbS,EAAIR,GAAK,EAAIM,EAAIP,GACjBb,EAAIc,GAAK,GAAK,EAAIM,GAAKP,GAE3B,OAAQ/I,EAAI,GACR,KAAK,EAAGvB,EAAIuK,EAAGjK,EAAImJ,EAAG1D,EAAI+E,EAAG,MAC7B,KAAK,EAAG9K,EAAI+K,EAAGzK,EAAIiK,EAAGxE,EAAI+E,EAAG,MAC7B,KAAK,EAAG9K,EAAI8K,EAAGxK,EAAIiK,EAAGxE,EAAI0D,EAAG,MAC7B,KAAK,EAAGzJ,EAAI8K,EAAGxK,EAAIyK,EAAGhF,EAAIwE,EAAG,MAC7B,KAAK,EAAGvK,EAAIyJ,EAAGnJ,EAAIwK,EAAG/E,EAAIwE,EAAG,MAC7B,KAAK,EAAGvK,EAAIuK,EAAGjK,EAAIwK,EAAG/E,EAAIgF,EAG9B,MAAO,CAAK,IAAJ/K,EAAa,IAAJM,EAAa,IAAJyF,EAC9B,CAeqBiF,CAASX,EAAEC,EAAEC,GAC9B,OAAOZ,EACHD,EAAS1I,KAAK4J,MAAMH,IACpBf,EAAS1I,KAAK4J,MAAMF,IACpBhB,EAAS1I,KAAK4J,MAAMD,IAC5B,CAEO,SAASM,EAAUC,EAAcC,EAAc1B,GAClD,MAAO,CACHzI,KAAK4J,MAAMtB,EAAW4B,EAAG,GAAIC,EAAG,GAAI1B,IACpCzI,KAAK4J,MAAMtB,EAAW4B,EAAG,GAAIC,EAAG,GAAI1B,IACpCzI,KAAK4J,MAAMtB,EAAW4B,EAAG,GAAIC,EAAG,GAAI1B,IAE5C,CCpDO,SAAS2B,EAAmBC,EAAyBC,EAA0BC,GAClF,IAAIC,EAAU,IAAI5D,MAAmB,GACrC,IAAK,IAAIrG,EAAI,EAAGA,GAAK+J,EAAkB/J,IACnCiK,EAAQjH,KAAK,CAAExB,MAAOxB,EAAE,EAAGsE,gBAAiBwF,EAAmB9J,EAAIyE,kBAAmB,EAAGR,kBAAmB,IAGhH+F,EAAUjG,SAASmG,IACf,IAAIC,EAAM1K,KAAK+H,IAAIuC,EAAmB,EAAItK,KAAK4J,MAAMa,EAAOJ,IAC5DG,EAAQE,GAAKlG,mBAAmB,IAGpC,IAAImG,EAAkB,IAAI/D,MAAmB,GAM7C,OALA4D,EAAQlG,SAASsG,IACbA,EAAO5F,kBAAoB4F,EAAOpG,kBAC9BoG,EAAO5F,kBAAoB,GAAK2F,EAAgBpH,KAAKqH,EAAS,IAG/DD,CACX,CCrCO,MAAME,EAAiB,EAAGC,cAAaC,eAAcjJ,cAAaqB,oBAErE,IAAI6H,EAA8C,GAE9CC,EAAc,EAElB,IAAK,IAAI1K,EAAI,EAAGA,EAAIwK,EAAa9G,OAAQ1D,IAAK,CAC1C,IAAI2K,EAAO,kBAACtG,MAAAA,CAAImB,MAAO,CACnBlD,MAAO,OACPC,OAAQ,OACRqI,WAAYJ,EAAaxK,GAAG2B,mBAAmByD,MAC/CE,QAASkF,EAAaxK,GAAG2B,mBAAmB2D,QAC5CuF,QAASL,EAAaxK,GAAG6B,mBAAmBX,YAAY,YAAYsJ,EAAaxK,GAAG6B,mBAAmBV,OACvG2J,aAAc,MACdC,OAAQ,OACRC,YAAa,MACbC,WAAY,KAEhBjG,aAAe1D,IAASY,EAAgBZ,EAAOC,EAAavB,EAAE,EAAGiF,aAAe3D,IAASa,EAAgBb,EAAOC,EAAavB,EAAE,IAE3HkL,EAAaR,EAAc,OAASA,EAAcH,GACnDC,EAAa9G,OAAO,IAAM1D,IAAIkL,EAAa,MAAMR,GACpDA,GAAeH,EACfE,EAAYzH,KAAK,kBAACqB,MAAAA,CAAImB,MAAO,CAAE2F,QAAS,SAAWR,EAAK,IAAEO,GAC9D,CAEA,OACI,kBAAC7G,MAAAA,CAAImB,MAAO,CACR4F,SAAU,WACVC,OAAQ,MACRC,MAAO,MACPhJ,MAAO,QACPiJ,OAAQ,oBACRT,aAAc,OACdU,QAAS,MAKTZ,WAAY,UACZxF,MAAO,UAEP,kBAACf,MAAAA,CAAImB,MAAO,CACRiG,eAAgB,WACjB,kBAACjH,IAAAA,KAAE,eAAa5B,EAAc,MAChC6H,EAAAA,EC3Bb,SAASiB,EAAoBC,EAAuBC,GAClD,IACIC,EHqDC,SAAwBC,EAAgCC,GAC3D,IAAIC,EAAmB,IAAI3F,MAAgB,GAC3CyF,EAAqB/H,SAASkI,IAAcD,EAAiBhJ,KAAKsF,EAAS2D,GAAU,IACrF,IAAIC,EAAoB,IAAI7F,MAAc,GAEtC8F,EAAkBL,EAAqBpI,OACvC0I,EAAS,GAAGD,EAAgB,GAChC,IAAI,IAAInM,EAAI,EAAGA,EAAI+L,EAAgB,EAAG/L,IAAI,CACtC,IAAIkI,EAAIlI,GAAG+L,EAAgB,GACvBM,EAAO5M,KAAK4J,MAAMnB,EAAEkE,GACpBE,EAAO7M,KAAK+H,IAAI6E,EAAK,EAAIF,EAAgB,GACzCI,EAAK,EAAGH,EAAQA,EAChBI,EAAc9C,EAAUsC,EAAiBK,GAAOL,EAAiBM,GAAOC,GAC5EL,EAAkBlJ,KAAKoF,EAASoE,EAAY,GAAGA,EAAY,GAAGA,EAAY,IAC9E,CAEA,OADAN,EAAkBlJ,KAAK8I,EAAqBA,EAAqBpI,OAAO,IACjEwI,CACX,CGtEiBO,CAdjB,SAAmC3O,GACjC,OAAQA,GACN,IAAK,UAAW,MAAO,CAAC,UAAW,UAAW,WAC9C,IAAK,WAAY,MAAO,CAAC,UAAW,UAAW,WAC/C,IAAK,UAAW,MAAO,CAAC,UAAW,UAAW,WAC9C,IAAK,YAAa,MAAO,CAAC,UAAW,WACrC,IAAK,WAAY,MAAO,CAAC,UAAW,WACpC,IAAK,YAAa,MAAO,CAAC,UAAW,WACrC,QAAS,MAAO,CAAC,UAAW,UAAW,UAAW,WAEtD,CAGyB4O,CAA0Bf,GACDC,GAE5Ce,EAAgCtG,MAAwBuF,GAE5D,IAAK,IAAI5L,EAAI,EAAGA,EAAI2M,EAA8BjJ,OAAQ1D,IAAK,CAC7D,IAAI4M,EAAmBhE,EAAeiD,EAAS7L,IAAK,IAChD6M,EAAyBjE,EAAeiD,EAAS7L,GAAI,IACrDgC,EAAkB,CACpBoD,MAAOyG,EAAS7L,GAChBsF,QAAS,GAEP1D,EAAsB,CACxBwD,MAAOwH,EACPtH,QAAS,GAGPrD,EAAkB,CACpBd,OAAQ,cAAeD,YAAa,GAGtCyL,EAA8B3M,GAAK,CACjCgC,gBAAiBA,EACjBJ,oBAAqBA,EACrBD,mBAAoBK,EACpBuD,mBAAoB,CAClBpE,OAAQ,QAASD,YAAa,GAEhCe,gBAAiBA,EACjBH,sBAAuB,CACrBX,OAAQ0L,EAAwB3L,YAAa,GAE/CW,mBAAoBI,EAExB,CAEA,OAAO0K,CACT,CAEO,MC3DMG,EAAS,IAAIC,EAAAA,aD2DiC,EAAGC,UAAS3K,OAAMC,QAAOC,aAClF,IAAKoJ,EAAesB,IAAKC,EAAAA,EAAAA,UAASF,EAAQG,cAEtCR,EAAgCjB,EAAoBC,EAAeqB,EAAQpB,mBAC/E,MAAOpB,EAAc4C,IAAmBF,EAAAA,EAAAA,UAASP,IAEjDU,EAAAA,EAAAA,YAAU,KACR,IAAIV,EAAgCjB,EAAoBsB,EAAQG,aAAcH,EAAQpB,mBACtFwB,EAAgBT,EAA8B,GAC7C,CAACK,EAAQG,aAAcH,EAAQpB,oBAElC,IAAI0B,EF9BC,SAA+BA,EAAoBC,EAAyBxD,EAA0BD,GAOzG,IAAI0D,EAAsC,EAAlBD,EACpBE,GAAc,IACdC,EAAkBJ,EAASK,MAAMjK,OAGjCuG,EAAU,IAAI5D,MAAMmH,GACxB,IAAK,IAAIxN,EAAI,EAAGA,EAAIiK,EAAQvG,OAAQ1D,IAAOiK,EAAQjK,GAAK,GAGxD,IAAI4N,EAAa,IAAOJ,EACxB,IAAK,IAAIxN,EAAI,EAAGA,EAAI0N,EAAiB1N,IAAK,CACtC,IAAI2N,EAAQL,EAASK,MAAM3N,GACvB6N,EAAYP,EAASO,UAAU7N,GACnCyN,EAAchO,KAAK0D,IAAIsK,EAAaI,GAEpC5D,EADUxK,KAAK4J,OAAQwE,EAAYD,EAAa,GAAK,IAAQA,IAChD5K,KAAK2K,EACtB,CAEA,IAAIG,EAAe,CAAEzK,aAAc,IAAIgD,MAAmB,GAAIsB,gBAAiB,GAC3EoG,EAAe,EACnB,IAAK,IAAI/N,EAAI,EAAGA,EAAIiK,EAAQvG,OAAQ1D,IAAK,CACrC,GAA0B,IAAtBiK,EAAQjK,GAAG0D,OAAgB,SAC/BqK,EAAetO,KAAK0D,IAAI4K,EAAc9D,EAAQjK,GAAG0D,QACjD,IAAII,EAAe+F,EAAmBC,EAAiBC,EAAkBE,EAAQjK,IACjF8N,EAAazK,aAAaL,KAAK,CAC3BxB,MAAOxB,EAAG8D,aAAcA,EACxB7E,YAAa2O,EAAa5N,EAC1BuG,iBAAkB0D,EAAQjK,GAAG0D,OAC7BsK,mBAAoB/D,EAAQjK,GAAG0D,OAAOgK,GAE9C,CAWA,OARAI,EAAazK,aAAaU,SAASJ,IAC/BA,EAAYG,aAAaC,SAASC,IAC9BA,EAAYC,mBAAqB8J,EACjC/J,EAAYS,mBAAqB6I,EAASK,MAAMjK,MAAM,GACxD,IAENoK,EAAanG,gBAAkBoG,EAAaL,EAErCI,CACX,CEnBiBG,CFvEV,SAAqB5L,GACxB,IAAI6L,EAAc7L,EAAK8L,OAAO,GAE1BR,EAAkB,GAClBE,EAAsB,GAE1B,IAAK,IAAI7N,EAAI,EAAGA,EAAIkO,EAAYE,OAAO,GAAGC,OAAO3K,OAAQ1D,IACrD,IAAK,IAAIqH,EAAI,EAAGA,EAAI6G,EAAYE,OAAO1K,OAAQ2D,IAAK,CAChD,IAAIiH,EAAQJ,EAAYE,OAAO/G,GACZ,eAAfiH,EAAMC,MAAyBZ,EAAM3K,KAAKsL,EAAMD,OAAOlQ,IAAI6B,IAC5C,mBAAfsO,EAAMC,MAA6BV,EAAU7K,KAAKsL,EAAMD,OAAOlQ,IAAI6B,GAC3E,CAOJ,MAJgE,CAC5D6N,UAAWA,EACXF,MAAOA,EAGf,CEoDuCa,CAAYnM,GAAO2K,EAAQyB,eAAgBzB,EAAQpB,kBAAmBoB,EAAQ0B,kBAI/GC,GAAgB3B,EAAQ4B,mBAAqB5B,EAAQ6B,WAAa,IAAM,EAC5E,MAAMC,EAAiBrP,KAAK+H,IAAIjF,EAAQD,EAAQqM,GAAgB,EAHlD,GAIRI,EAAiB,CAAEpP,EAAGmP,EAJd,GAIwCjP,EAAG0C,EAAS,GAElE,IAAIG,EAAoC,GACpCC,EAAsBlD,KAAK0D,IAAI,EAAG6J,EAAQyB,gBAE9C,GAA+B,YAA3BzB,EAAQgC,eAA8B,CACxC,MAAMC,EAAqB,CAAElJ,IAAK,CAAE6B,KAAM,uBAAwBzC,KAAM,SAAWU,aAAc,IAC3FqJ,EAAoB,CAAEnJ,IAAK,CAAE6B,KAAM,yBAA0BzC,KAAM,SAAWU,aAAc,IAC5FsJ,EAAyB,CAAEpJ,IAAK,CAAE6B,KAAM,yBAA0BzC,KAAM,SAAWU,aAAc,IAEvGnD,EAAgBM,KAAK,CAAE5C,MAAO,EAAG0F,KAAM,IAAKN,MAAOyJ,IACnDvM,EAAgBM,KAAK,CAAE5C,MAAO,GAAI0F,KAAM,IAAKN,MAAOyJ,IACpDvM,EAAgBM,KAAK,CAAE5C,MAAO,IAAK0F,KAAM,IAAKN,MAAOyJ,IACrDvM,EAAgBM,KAAK,CAAE5C,MAAO,IAAK0F,KAAM,IAAKN,MAAOyJ,IAErDtM,EAAsB,EAES,aAA3BqK,EAAQtH,iBACVhD,EAAgBM,KAAK,CAAE5C,MAAO,GAAI0F,KAAM,KAAMN,MAAO0J,IACrDxM,EAAgBM,KAAK,CAAE5C,MAAO,IAAK0F,KAAM,KAAMN,MAAO0J,IACtDxM,EAAgBM,KAAK,CAAE5C,MAAO,IAAK0F,KAAM,KAAMN,MAAO0J,IACtDxM,EAAgBM,KAAK,CAAE5C,MAAO,IAAK0F,KAAM,KAAMN,MAAO0J,IACtDvM,EAAsB,GAEO,iBAA3BqK,EAAQtH,iBACVhD,EAAgBM,KAAK,CAAE5C,MAAO,KAAM0F,KAAM,MAAON,MAAO2J,IACxDzM,EAAgBM,KAAK,CAAE5C,MAAO,KAAM0F,KAAM,MAAON,MAAO2J,IACxDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDzM,EAAgBM,KAAK,CAAE5C,MAAO,MAAO0F,KAAM,MAAON,MAAO2J,IACzDxM,EAAsB,EAE1B,MAAO,GAA+B,WAA3BqK,EAAQgC,eAA6B,CAC9C,MAAMI,EAAmB,CAAErJ,IAAK,CAAE6B,KAAM,yBAA0BzC,KAAM,SAAWU,aAAc,IACjG,IAAIwJ,EAAuC,EAAzBrC,EAAQyB,eACtB1L,EAAY,IAAMsM,EACtB,IAAK,IAAIrP,EAAI,EAAGA,EAAIqP,EAAarP,IAAK,CACpC,IAAII,EAAQ2C,EAAY/C,EACxB0C,EAAgBM,KAAK,CAAE5C,MAAOA,EAAO0F,KAAM1F,EAAQ,IAAKoF,MAAO4J,GACjE,CACF,CAEA,IAAIxM,EE5HC,SAA+B0M,GAClC,OAAQA,GACJ,IAAK,KAAM,MAAO,MAClB,IAAK,MAAO,MAAO,OACnB,IAAK,MAAO,MAAO,MACnB,IAAK,OAAQ,MAAO,OACpB,IAAK,KAAM,MAAO,KAClB,QAAS,MAAO,MAExB,CFmHsBC,CAAsBvC,EAAQpK,eAC9C4M,EAAiB,kBAAClF,EAAcA,CAACC,YAAayC,EAAQ0B,iBAAkBlE,aAAcA,EAAcjJ,YAAa6L,EAAiBxK,cAAeA,IAErJ,OACE,kBAACyB,MAAAA,KACC,kBAACjC,EAAQA,CACPE,MAAOA,EAAOC,OAAQA,EAAQlC,OAAQyO,EAAgBxO,OAAQyO,EAC9D1M,KAAMiL,EAAU9K,aAAcwK,EAAQyB,eAAgB/L,gBAAiBA,EACvEjB,OAAQ+I,EAAcjJ,YAAa6L,EAAiB3K,qBAAsBuK,EAAQvK,qBAClFE,oBAAqBA,EAAqBC,cAAeA,IAC1DoK,EAAQ6B,YAAcW,EAAAA,ICnIyCC,iBAAiBC,GAC9EA,EACJC,UAAU,CACTC,KAAM,eACNrB,KAAM,gBACNsB,YAAa,kCACbC,aAAc,UACdC,SAAU,CACR/C,QAAS,CACP,CACEpO,MAAO,UACP+G,MAAO,WAET,CACE/G,MAAO,UACP+G,MAAO,iBAET,CACE/G,MAAO,WACP+G,MAAO,aAET,CACE/G,MAAO,UACP+G,MAAO,YAET,CACE/G,MAAO,YACP+G,MAAO,cAET,CACE/G,MAAO,WACP+G,MAAO,aAET,CACE/G,MAAO,YACP+G,MAAO,kBAKdqK,eAAe,CACdJ,KAAM,iBACNrB,KAAM,uBACNsB,YAAa,iFACbC,aAAc,IAEfE,eAAe,CACdJ,KAAM,oBACNrB,KAAM,0BACNsB,YAAa,wDACbC,aAAc,IAEfE,eAAe,CACdJ,KAAM,mBACNrB,KAAM,qBACNsB,YAAa,+CACbC,aAAc,IAEfE,eAAe,CACdJ,KAAM,uBACNrB,KAAM,0BACNsB,YAAa,0DACbC,aAAc,IAEfH,UAAU,CACTC,KAAM,gBACNrB,KAAM,kBACNsB,YAAa,sGACbC,aAAc,KACdC,SAAU,CACR/C,QAAS,CACP,CACEpO,MAAO,KACP+G,MAAO,2BAET,CACE/G,MAAO,MACP+G,MAAO,8BAET,CACE/G,MAAO,MACP+G,MAAO,wBAET,CACE/G,MAAO,OACP+G,MAAO,0BAET,CACE/G,MAAO,KACP+G,MAAO,kBAKdgK,UAAU,CACTC,KAAM,iBACNrB,KAAM,kBACNuB,aAAc,UACdC,SAAU,CACR/C,QAAS,CACP,CACEpO,MAAO,UACP+G,MAAO,sBAET,CACE/G,MAAO,SACP+G,MAAO,2BAKdgK,UAAU,CACTC,KAAM,iBACNrB,KAAM,kBACNuB,aAAc,WACdC,SAAU,CACR/C,QAAS,CACP,CACEpO,MAAO,WACP+G,MAAO,iCAET,CACE/G,MAAO,UACP+G,MAAO,uCAET,CACE/G,MAAO,eACP+G,MAAO,iDAIbsK,OAASC,GAAqC,YAA1BA,EAAOlB,iBAE5BmB,iBAAiB,CAChBP,KAAM,aACNrB,KAAM,cACNuB,cAAc,IAEfK,iBAAiB,CAChBP,KAAM,oBACNrB,KAAM,sBACNuB,cAAc,EACdG,OAASC,GAAWA,EAAOrB,c","sources":["webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/Svg.tsx","webpack:///./utils/svgUtils.tsx","webpack:///./utils/stylesUtils.ts","webpack:///./components/Windrose.tsx","webpack:///./utils/mathUtils.ts","webpack:///./utils/colorUtils.ts","webpack:///./utils/dataUtils.ts","webpack:///./components/WindroseLegend.tsx","webpack:///./components/WindrosePanel.tsx","webpack:///./module.ts","webpack:///./utils/labelUtils.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from 'react';\n\n\ntype SvgProps = {\n  children: JSX.Element|JSX.Element[];\n};\n\nexport const Svg = ({ children }: SvgProps) => {\n  return (\n    <g>\n      {children}\n    </g>\n  );\n};\n","import React from \"react\";\nimport { Vector2 } from \"types\";\n\n\n\nexport function constructCakeSlice(centerAngle: number, angleOffset: number, circleCenter: Vector2, startRadius: number, endRadius: number): string {\n    let polypoint = \"\";\n\n    let leftAngle = centerAngle - angleOffset / 2;\n    let rightAngle = centerAngle + angleOffset / 2;\n\n    let leftLowX = Math.cos(leftAngle) * startRadius + circleCenter.x\n    let leftLowY = Math.sin(leftAngle) * startRadius + circleCenter.y;\n    let leftHighX = Math.cos(leftAngle) * endRadius + circleCenter.x\n    let leftHighY = Math.sin(leftAngle) * endRadius + circleCenter.y;\n    polypoint += leftLowX + \",\" + leftLowY + \" \"\n    polypoint += leftHighX + \",\" + leftHighY + \" \"\n\n    let degree = Math.PI / 180;\n    for (let i = degree; i < angleOffset; i += degree) {\n        let pointX = Math.cos(i + leftAngle) * endRadius + circleCenter.x\n        let pointY = Math.sin(i + leftAngle) * endRadius + circleCenter.y;\n        polypoint += pointX + \",\" + pointY + \" \"\n    }\n\n    let righttLowX = Math.cos(rightAngle) * startRadius + circleCenter.x;\n    let righttLowY = Math.sin(rightAngle) * startRadius + circleCenter.y;\n    let rightHighX = Math.cos(rightAngle) * endRadius + circleCenter.x;\n    let rightHighY = Math.sin(rightAngle) * endRadius + circleCenter.y;\n    polypoint += rightHighX + \",\" + rightHighY + \" \"\n    polypoint += righttLowX + \",\" + righttLowY + \" \"\n\n    for (let i = degree; i < angleOffset; i += degree) {\n        let pointX = Math.cos(rightAngle - i) * startRadius + circleCenter.x\n        let pointY = Math.sin(rightAngle - i) * startRadius + circleCenter.y;\n        polypoint += pointX + \",\" + pointY + \" \"\n    }\n\n    return polypoint;\n}\n\nexport function createPetalLine(angle: number, radius: number, center: Vector2, isBold: boolean, isDashed: boolean) {\n    let innerCircleX = center.x + Math.cos(angle) * radius * .1;\n    let outerCircleX = center.x + Math.cos(angle) * radius;\n    let innerCircleY = center.y + Math.sin(angle) * radius * .1;\n    let outerCircleY = center.y + Math.sin(angle) * radius;\n    return (<line x1={innerCircleX} y1={innerCircleY} x2={outerCircleX} y2={outerCircleY} strokeWidth={isBold ? 4 : 1} stroke='#222222' strokeDasharray={isDashed ? \"2,5\" : \"\"} />);\n}\n","import { SpeedBucketStyle } from \"types\";\n\nexport function onMouseEnterPolygon(event: React.MouseEvent<SVGPolygonElement, MouseEvent>, changeStyle: React.Dispatch<React.SetStateAction<SpeedBucketStyle[]>>, index: number) {\n    changeStyle((styles) => {\n        let newStyles = [...styles]\n        newStyles[index].currentBucketStyle = newStyles[index].selectedBucketStyle;\n        newStyles[index].currentStrokeStyle = newStyles[index].highlightsStrokeStyle;\n        return newStyles;\n    })\n    //let target = event.target as SVGElement;  \n    //target.setAttribute(\"stroke\", \"#aaaaaa\")\n    //target.setAttribute(\"stroke-width\", \"2\")\n}\nexport function onMouseLeavePolygon(event: React.MouseEvent<SVGPolygonElement, MouseEvent>, changeStyle: React.Dispatch<React.SetStateAction<SpeedBucketStyle[]>>, index: number) {\n    changeStyle((styles) => {\n        let newStyles = [...styles]\n        newStyles[index].currentBucketStyle = newStyles[index].idleBucketStyle;\n        newStyles[index].currentStrokeStyle = newStyles[index].idleStrokeStyle;\n        return newStyles;\n    })\n    //let target = event.target as SVGElement;\n    //target.setAttribute(\"stroke\", \"\")\n    //target.setAttribute(\"stroke-width\", \"0\")\n}\n\nexport function onMouseEnterDiv(event: React.MouseEvent<HTMLDivElement, MouseEvent>, changeStyle: React.Dispatch<React.SetStateAction<SpeedBucketStyle[]>>, index: number) {\n    changeStyle((styles) => {\n        let newStyles = [...styles]\n        newStyles[index].currentBucketStyle = newStyles[index].selectedBucketStyle;\n        newStyles[index].currentStrokeStyle = newStyles[index].highlightsStrokeStyle;\n        return newStyles;\n    })\n}\nexport function onMouseLeaveDiv(event: React.MouseEvent<HTMLDivElement, MouseEvent>, changeStyle: React.Dispatch<React.SetStateAction<SpeedBucketStyle[]>>, index: number) {\n    changeStyle((styles) => {\n        let newStyles = [...styles]\n        newStyles[index].currentBucketStyle = newStyles[index].idleBucketStyle;\n        newStyles[index].currentStrokeStyle = newStyles[index].idleStrokeStyle;\n        return newStyles;\n    })\n}\n","import { Tooltip } from '@grafana/ui';\nimport React from 'react';\n\nimport { Svg } from './Svg'\nimport { PetalBucket, Vector2, WindroseData, WindroseProps } from 'types';\nimport { constructCakeSlice, createPetalLine } from 'utils/svgUtils';\nimport { onMouseEnterPolygon, onMouseLeavePolygon } from 'utils/stylesUtils';\n\nfunction createCircleScale(data: WindroseData, radius: number, center: Vector2, percentLabelAngle: number) {\n  // Create rings\n  let circlesRings: JSX.Element[] = [];\n  let topCirclesRings: JSX.Element[] = [];\n\n  let ringsCount = 5;\n  let subringsCount = 5;\n\n  let minimumSubringRadius = 275;\n  let ringRadius = radius * .9 / ringsCount;\n  for (let i = 0; i < ringsCount; i++) {\n    let currentRingRadius = radius * (.1 + .9 * i / ringsCount);\n    if (i > 0) { circlesRings.push(<circle cx={center.x} cy={center.y} r={currentRingRadius} strokeDasharray=\"\" fill=\"transparent\" stroke='#222222' strokeWidth='.5' />); }\n    //if (i > 0) { topCirclesRings.push(<circle cx={center.x} cy={center.y} r={currentRingRadius} strokeDasharray=\"\" style={{ pointerEvents: 'none'}} fill=\"transparent\" stroke='#222222' opacity={.1} strokeWidth='.5' />); }\n    if (radius > minimumSubringRadius) {\n      for (let j = 1; j < subringsCount; j++) {\n        currentRingRadius = radius * (.1 + .9 * i / ringsCount) + ringRadius * j / subringsCount;\n        circlesRings.push(<circle cx={center.x} cy={center.y} r={currentRingRadius} strokeDasharray=\"5,5\" fill=\"transparent\" stroke='#222222' strokeWidth='.25' />);\n        //topCirclesRings.push(<circle cx={center.x} cy={center.y} r={currentRingRadius} strokeDasharray=\"5,5\" style={{ pointerEvents: 'none'}} fill=\"transparent\" stroke='#222222' opacity={.1} strokeWidth='.25' />);\n      }\n    }\n  }\n\n  // Create percent labels\n  let percentLabels: JSX.Element[] = [];\n\n  let sin = Math.sin(percentLabelAngle);\n  let cos = Math.cos(percentLabelAngle);\n\n  let fontSize = 15*radius/minimumSubringRadius;\n  let adjustedFontSize = Math.min(15, fontSize);\n  let labelFont = `normal ${adjustedFontSize}px sans-serif`;\n  for (let i = 1; i < ringsCount; i++) {\n    let centerDistance = radius * (i / ringsCount * .9 + .1);\n    let x = center.x + cos * centerDistance;\n    let y = center.y + sin * centerDistance;\n    let percent = data.maxPetalPercent / ringsCount * i * 100;\n\n    percentLabels.push(\n      <text x={x} y={y} style={\n        { \n          pointerEvents: 'none' ,\n          font: labelFont\n        }\n      }\n        dominantBaseline=\"auto\" textAnchor=\"start\"\n      >{Math.round(percent * 10) / 10 + \"%\"}</text>\n    );\n  }\n\n  return [circlesRings, topCirclesRings, percentLabels]\n}\n\nfunction determinePercentLabelAngle(angleDiff: number, petalBuckets: PetalBucket[], petalsPer90Degree: number) {\n  let deg2rad = Math.PI/180;\n  let bucketsCount = petalsPer90Degree*4;\n  let petalSizes = new Array(bucketsCount).fill(0);\n\n  petalBuckets.forEach(petal => {\n    petalSizes[petal.index] = petal.petalValuesCount;\n  });\n\n  let minSum = petalSizes[0]+petalSizes[petalSizes.length-1];\n  let minIndex = 0;\n  for(let i = 1; i < bucketsCount; i++){\n    let petal1 = petalSizes[i-1];\n    let petal2 = petalSizes[i];\n    if(petal1+petal2<minSum){\n      minSum = petal1+petal2;\n      minIndex = i;\n    }\n  }\n\n  return angleDiff * (minIndex-1) + angleDiff / 2 - 90 * deg2rad;\n}\n\nexport const Windrose = ({ data, width, height, center, radius, bucketsCount, styles, changeStyle, tooltipDecimalPlaces, directionLabels, directionLinesCount, windSpeedUnit }: WindroseProps) => {\n\n  let petalNumber = bucketsCount;\n\n  let linePetals: JSX.Element[] = [];\n\n  let angleDiff = Math.PI / petalNumber / 2;\n  for (let i = 0; i < petalNumber * 2; i++) {\n    let angle = angleDiff * i;\n\n    let isBold = i === 0 || i === petalNumber\n    linePetals.push(createPetalLine(angle, radius, center, isBold, true));\n    linePetals.push(createPetalLine(angle + Math.PI, radius, center, isBold, true));\n  }\n\n  let lineAngleDiff = Math.PI / directionLinesCount / 2;\n  let oneDegreeInRad = Math.PI / 180;\n  for (let i = 0; i < directionLinesCount * 2; i++) {\n    let angle = lineAngleDiff * i;\n\n    let isBold = i === 0 || i === directionLinesCount\n    linePetals.push(createPetalLine(angle, radius, center, isBold, false));\n    linePetals.push(createPetalLine(angle + Math.PI, radius, center, isBold, false));\n  }\n\n\n  tooltipDecimalPlaces = Math.max(0, Math.round(tooltipDecimalPlaces))\n\n  let petalBuckets: JSX.Element[] = [];\n  let petalBucketHighlights: JSX.Element[] = [];\n  let normalizedRadius = radius * 0.9;\n  let normalizedStartRadius = radius * 0.1;\n  let deg2rad = Math.PI / 180;\n  for (let i = 0; i < data.petalBuckets.length; i++) {\n    let petalBucket = data.petalBuckets[i];\n    let centerAngle = ((petalBucket.centerAngle + 270) % 360) * deg2rad;\n\n    let prevBucketSize = normalizedStartRadius;\n\n    let speedBucketLowerBound = 0\n    petalBucket.speedBuckets.forEach((speedBucket, index) => {\n      let startRadius = prevBucketSize;\n      let endRadius = prevBucketSize + normalizedRadius * speedBucket.petalRelativeSize;\n      prevBucketSize = endRadius;\n\n      let polypointString = constructCakeSlice(centerAngle, angleDiff - oneDegreeInRad, center, startRadius - .05, endRadius + .05);\n      let bucketStyle = styles[speedBucket.index];\n\n      let rangeTooltip;\n      if(index === petalBucket.speedBuckets.length-1){\n        rangeTooltip = <div>Range: &gt; {speedBucketLowerBound} {windSpeedUnit}</div>;\n      } else {\n        rangeTooltip = <div>Range: {speedBucketLowerBound}-{speedBucket.speedUpperBound} {windSpeedUnit}</div>;\n      }\n\n      let tooltipContent = <div>\n        <div>Size: <b>{Math.round(speedBucket.totalRelativeSize * 100 * Math.pow(10, tooltipDecimalPlaces)) / Math.pow(10, tooltipDecimalPlaces) + \"%\"}</b></div>\n        {rangeTooltip}\n      </div>\n      speedBucketLowerBound = speedBucket.speedUpperBound;\n\n      petalBuckets.push(\n        <Tooltip content={tooltipContent}>\n          <polygon className={speedBucket.index.toString()}\n            onMouseEnter={(event) => { onMouseEnterPolygon(event, changeStyle, speedBucket.index) }} onMouseLeave={(event) => { onMouseLeavePolygon(event, changeStyle, speedBucket.index) }}\n            points={polypointString}\n            fill={bucketStyle.currentBucketStyle.color} fillOpacity={bucketStyle.currentBucketStyle.opacity}\n            stroke={bucketStyle.bucketsStrokeStyle.stroke} strokeWidth={bucketStyle.bucketsStrokeStyle.strokeWidth} />\n        </Tooltip>\n      );\n      petalBucketHighlights.push(\n        <polygon className={speedBucket.index.toString()}\n            stroke={bucketStyle.currentStrokeStyle.stroke} strokeWidth={bucketStyle.currentStrokeStyle.strokeWidth}\n            style={{ pointerEvents: 'none' }}\n            points={polypointString}\n            fill=\"transparent\"  />\n      );\n    });\n  }\n\n\n  let cardinalLabels: JSX.Element[] = [];\n  for (let i = 0; i < directionLabels.length; i++) {\n    let label = directionLabels[i];\n    let angle = (label.angle - 90) * deg2rad;\n    let cardinalOffset = radius + label.style.radiusOffset;\n    let x = center.x + Math.cos(angle) * cardinalOffset\n    let y = center.y + Math.sin(angle) * cardinalOffset\n    cardinalLabels.push(\n      <text x={x} y={y} style={label.style.css} dominantBaseline=\"middle\" textAnchor=\"middle\">\n        {label.text}</text>);\n  }\n\n  let percentLabelAngle = determinePercentLabelAngle(angleDiff, data.petalBuckets, bucketsCount);\n  let [circlesRings, topCirclesRings, percentLabels] = createCircleScale(data, radius, center, percentLabelAngle);\n\n  return (\n    <div>\n      <div>\n        <svg width={width} height={height}>\n          <Svg>\n            <circle cx={center.x} cy={center.y} r={radius} fill=\"#f0f0f0\" />\n\n            <circle cx={center.x} cy={center.y} r={radius * .1} fill=\"#dddddd\" />\n            <circle cx={center.x} cy={center.y} r={radius} fill=\"transparent\" stroke='#222222' strokeWidth='1' />\n            <circle cx={center.x} cy={center.y} r={radius * .1} fill=\"transparent\" stroke='#222222' strokeWidth='1' />\n            <Svg>\n              {circlesRings}\n            </Svg>\n            <Svg>\n              {linePetals}\n            </Svg>\n            <Svg>\n              {petalBuckets}\n            </Svg>\n            <Svg>\n              {petalBucketHighlights}\n            </Svg>\n            <Svg>\n              {percentLabels}\n            </Svg>\n            <Svg>\n              {cardinalLabels}\n            </Svg>\n            <Svg>\n              {topCirclesRings}\n            </Svg>\n          </Svg>\n        </svg>\n      </div>\n    </div>\n  );\n};\n","\nexport function lerpNumber(n1: number, n2: number, t: number) {\n    let diff = n2 - n1;\n    return n1+diff*t;\n}\n\nexport function clamp01(n: number){\n    return Math.max(0, Math.min(1, n));\n}\nexport function clamp255(n: number){\n    return Math.max(0, Math.min(255, n));\n}\n","import { clamp255, lerpNumber } from \"./mathUtils\";\n\nexport function rgbToHsv(r: number, g: number, b: number) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, v = max;\n\n    let d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\n\nexport function hsvToRgb(h: number, s: number, v: number) {\n    let r = 0, g = 0, b = 0;\n\n    let i = Math.floor(h * 6);\n    let f = h * 6 - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n        case 0: r = v; g = t; b = p; break;\n        case 1: r = q; g = v; b = p; break;\n        case 2: r = p; g = v; b = t; break;\n        case 3: r = p; g = q; b = v; break;\n        case 4: r = t; g = p; b = v; break;\n        case 5: r = v; g = p; b = q; break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n}\n\nexport function rgbToHex(r: number, g: number, b: number) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nexport function hexToRgb(hex: string, result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)) {\n    return result ? result.map(i => parseInt(i, 16)).slice(1) : [0,0,0]\n}\n\nexport function highlightColor(color: string, percentHighlight: number){\n    let [r,g,b] = hexToRgb(color);\n    let [h,s,v] = rgbToHsv(r,g,b);\n    v = Math.max(0, Math.min(1, v*(1+percentHighlight/2)))\n    s = Math.max(0, Math.min(1, s*(1+percentHighlight)))\n    let [_r,_g,_b] = hsvToRgb(h,s,v);\n    return rgbToHex(\n        clamp255(Math.floor(_r)),\n        clamp255(Math.floor(_g)),\n        clamp255(Math.floor(_b)));\n}\n\nexport function colorLerp(c1: number[], c2: number[], t: number) {\n    return [\n        Math.floor(lerpNumber(c1[0], c2[0], t)),\n        Math.floor(lerpNumber(c1[1], c2[1], t)),\n        Math.floor(lerpNumber(c1[2], c2[2], t))\n    ];\n}\n\nexport function createColorMap(colorCheckpointHexes: string[], numberOfBuckets: number) {\n    let colorCheckpoints = new Array<number[]>(0);\n    colorCheckpointHexes.forEach((hexValue) =>{ colorCheckpoints.push(hexToRgb(hexValue)); })\n    let lerpedColorHashes = new Array<string>(0);\n    \n    let checkpointCount = colorCheckpointHexes.length;\n    let t_diff = 1/(checkpointCount-1)\n    for(let i = 0; i < numberOfBuckets-1; i++){\n        let t = i/(numberOfBuckets-1);\n        let idx1 = Math.floor(t/t_diff);\n        let idx2 = Math.min(idx1+1, (checkpointCount-1));\n        let t1 = (t%t_diff)/t_diff;\n        let lerpedColor = colorLerp(colorCheckpoints[idx1], colorCheckpoints[idx2], t1);\n        lerpedColorHashes.push(rgbToHex(lerpedColor[0],lerpedColor[1],lerpedColor[2]));\n    }\n    lerpedColorHashes.push(colorCheckpointHexes[colorCheckpointHexes.length-1])\n    return lerpedColorHashes;\n}\n","import { PanelData } from \"@grafana/data\";\nimport { PetalBucket, SpeedBucket, WindData, WindroseData } from \"types\";\n\nexport function extractData(data: PanelData) {\n    let weatherData = data.series[0];\n\n    let speed: number[] = [];\n    let direction: number[] = [];\n\n    for (let i = 0; i < weatherData.fields[0].values.length; i++) {\n        for (let j = 0; j < weatherData.fields.length; j++) {\n            let field = weatherData.fields[j];\n            if (field.name === 'wind_speed') { speed.push(field.values.get(i)); }\n            if (field.name === 'wind_direction') { direction.push(field.values.get(i)); }\n        }\n    }\n\n    const windDataFrame: { direction: number[], speed: number[] } = {\n        direction: direction,\n        speed: speed\n    }\n    return windDataFrame;\n}\n\nexport function sortToPetalBuckets(speedBucketSize: number, speedBucketCount: number, speedData: number[]): SpeedBucket[] {\n    let buckets = new Array<SpeedBucket>(0);\n    for (let i = 1; i <= speedBucketCount; i++) {\n        buckets.push({ index: i-1, speedUpperBound: speedBucketSize * (i), totalRelativeSize: 0, petalRelativeSize: 0 });\n    }\n\n    speedData.forEach((item) => {\n        let idx = Math.min(speedBucketCount - 1, (Math.floor(item / speedBucketSize)));\n        buckets[idx].petalRelativeSize++;\n    });\n\n    let nonEmptyBuckets = new Array<SpeedBucket>(0);\n    buckets.forEach((bucket) => {\n        bucket.totalRelativeSize = bucket.petalRelativeSize;\n        if (bucket.totalRelativeSize > 0) { nonEmptyBuckets.push(bucket); }\n    });\n\n    return nonEmptyBuckets;\n}\n\nexport function calculateWindroseData(windData: WindData, bucketsPer90Deg: number, speedBucketCount: number, speedBucketSize: number): WindroseData {    \n    /*windData = {\n        speed: [.1,.3,.6,.8,1.1,1.3,1.6,1.8],\n        direction: [0,0,0,0,90,90,45,45]\n    }*/\n    \n    // Global bounds inital values\n    let totalBucketsCount = bucketsPer90Deg * 4;\n    let globalBound = -Infinity;\n    let dataPointsCount = windData.speed.length;\n\n    // Bucket array instantiation\n    let buckets = new Array(totalBucketsCount);\n    for (let i = 0; i < buckets.length; i++) { buckets[i] = []; }\n\n    // Bucket filling\n    let bucketSize = 360 / (totalBucketsCount);\n    for (let i = 0; i < dataPointsCount; i++) {\n        let speed = windData.speed[i];\n        let direction = windData.direction[i];\n        globalBound = Math.max(globalBound, direction);\n        let idx = Math.floor(((direction + bucketSize / 2) % 360) / (bucketSize))\n        buckets[idx].push(speed)\n    }\n\n    let windroseData = { petalBuckets: new Array<PetalBucket>(0), maxPetalPercent: 0 }\n    let maxPetalSize = 0;\n    for (let i = 0; i < buckets.length; i++) {\n        if (buckets[i].length === 0) { continue; }\n        maxPetalSize = Math.max(maxPetalSize, buckets[i].length);\n        let speedBuckets = sortToPetalBuckets(speedBucketSize, speedBucketCount, buckets[i]);\n        windroseData.petalBuckets.push({\n            index: i, speedBuckets: speedBuckets, \n            centerAngle: bucketSize * i,\n            petalValuesCount: buckets[i].length,\n            containedDataRatio: buckets[i].length/dataPointsCount\n        });\n    }\n\n\n    windroseData.petalBuckets.forEach((petalBucket) => {\n        petalBucket.speedBuckets.forEach((speedBucket) => {\n            speedBucket.petalRelativeSize /= maxPetalSize;\n            speedBucket.totalRelativeSize /= windData.speed.length;\n        })\n    })\n    windroseData.maxPetalPercent = maxPetalSize/dataPointsCount;\n\n    return windroseData;\n}  \n","import React from 'react';\nimport { WindroseLegendProps } from 'types';\nimport { onMouseEnterDiv, onMouseLeaveDiv } from 'utils/stylesUtils';\n\n\nexport const WindroseLegend = ({ bucketsSize, bucketStyles, changeStyle, windSpeedUnit }: WindroseLegendProps) => {\n\n    let legendItems: Array<React.ReactElement<any>> = []\n\n    let bucketStart = 0;\n\n    for (let i = 0; i < bucketStyles.length; i++) {\n        let icon = <div style={{\n            width: \"20px\",\n            height: \"10px\",\n            background: bucketStyles[i].currentBucketStyle.color,\n            opacity: bucketStyles[i].currentBucketStyle.opacity,\n            outline: bucketStyles[i].currentStrokeStyle.strokeWidth+\"px solid \"+bucketStyles[i].currentStrokeStyle.stroke,\n            borderRadius: \"4px\",\n            margin: \"auto\",\n            marginRight: \"6px\",\n            marginLeft: \"0\"\n        }} \n        onMouseEnter={(event)=>{onMouseEnterDiv(event, changeStyle, i)}} onMouseLeave={(event)=>{onMouseLeaveDiv(event, changeStyle, i)}} \n        />\n        let speedLabel = bucketStart + \" - \" + (bucketStart + bucketsSize);\n        if(bucketStyles.length-1 === i) {speedLabel = \" > \"+bucketStart;}\n        bucketStart += bucketsSize;\n        legendItems.push(<div style={{ display: 'flex' }}>{icon} {speedLabel}</div>)\n    }\n\n    return (\n        <div style={{\n            position: \"absolute\",\n            bottom: \"8px\",\n            right: \"8px\",\n            width: \"150px\",\n            border: \"4px solid #4b4c50\",\n            borderRadius: \"16px\",\n            padding: \"8px\",\n\n            // DATK THEME\n            //background: \"#4b4c50\",\n            //color: \"white\",\n            background: \"#f2f2f2\",\n            color: \"black\",\n        }}>\n            <div style={{\n                justifyContent: 'center'\n            }}><b>Wind speed ({windSpeedUnit})</b></div>\n            {legendItems}\n        </div>\n\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { DirectionLabel, SpeedBucketStyle, WindroseOptions } from 'types';\nimport { Windrose } from './Windrose';\nimport { createColorMap, highlightColor } from '../utils/colorUtils'\nimport { calculateWindroseData, extractData } from 'utils/dataUtils';\nimport { WindroseLegend } from './WindroseLegend';\nimport { getWindSpeedUnitLabel } from 'utils/labelUtils';\n\ninterface WindrosePanelProps extends PanelProps<WindroseOptions> { }\n\nfunction getPredefinedColorPalette(key: string) {\n  switch (key) {\n    case \"operato\": return [\"#1b1c20\", \"#ffffff\", \"#e6a749\"]\n    case \"greenred\": return [\"#4af244\", \"#ecf238\", \"#f23838\"];\n    case \"bluered\": return [\"#5e74ff\", \"#d4d4d4\", \"#ed3e3e\"];\n    case \"grayscale\": return [\"#bfbfbf\", \"#3b3b3b\"];\n    case \"redscale\": return [\"#ff8f8f\", \"#400000\"];\n    case \"bluescale\": return [\"#8fe5ff\", \"#002b38\"];\n    default: return [\"#3844f2\", \"#44f2a7\", \"#ecf238\", \"#f23838\"];\n  }\n}\n\nfunction createDefaultStyles(colorPaleteId: string, speedBucketsCount: number) {\n  let colorCheckpoints = getPredefinedColorPalette(colorPaleteId);\n  let colorBar = createColorMap(colorCheckpoints, speedBucketsCount);\n\n  let constructingSpeedBucketStyles = Array<SpeedBucketStyle>(speedBucketsCount);\n\n  for (let i = 0; i < constructingSpeedBucketStyles.length; i++) {\n    let highlightedColor = highlightColor(colorBar[i], -.5);\n    let highlightedStrokeColor = highlightColor(colorBar[i], .5);\n    let idleBucketStyle = {\n      color: colorBar[i],\n      opacity: 1,\n    }\n    let selectedBucketStyle = {\n      color: highlightedColor,\n      opacity: 1,\n    }\n\n    let idleStrokeStyle = {\n      stroke: \"transparent\", strokeWidth: 0\n    };\n\n    constructingSpeedBucketStyles[i] = {\n      idleBucketStyle: idleBucketStyle,\n      selectedBucketStyle: selectedBucketStyle,\n      currentBucketStyle: idleBucketStyle,\n      bucketsStrokeStyle: {\n        stroke: \"black\", strokeWidth: 1\n      },\n      idleStrokeStyle: idleStrokeStyle,\n      highlightsStrokeStyle: {\n        stroke: highlightedStrokeColor, strokeWidth: 4\n      },\n      currentStrokeStyle: idleStrokeStyle\n    };\n  }\n\n  return constructingSpeedBucketStyles;\n}\n\nexport const WindrosePanel: React.FC<WindrosePanelProps> = ({ options, data, width, height }) => {\n  let [colorPaleteId, _] = useState(options.colorPalette);\n\n  let constructingSpeedBucketStyles = createDefaultStyles(colorPaleteId, options.speedBucketsCount);\n  const [bucketStyles, setBucketStyles] = useState(constructingSpeedBucketStyles);\n\n  useEffect(() => {\n    let constructingSpeedBucketStyles = createDefaultStyles(options.colorPalette, options.speedBucketsCount);\n    setBucketStyles(constructingSpeedBucketStyles);\n  }, [options.colorPalette, options.speedBucketsCount]);\n\n  let windData = calculateWindroseData(extractData(data), options.petalsPer90Deg, options.speedBucketsCount, options.speedBucketsSize)\n\n  let padding = 32;\n\n  let legendOffset = !options.doesLegendOverlay && options.showLegend ? 150 : 0;\n  const windroseRadius = Math.min(height, width - legendOffset) / 2 - padding;\n  const windroseCenter = { x: windroseRadius + padding, y: height / 2 }\n\n  let directionLabels: DirectionLabel[] = [];\n  let directionLinesCount = Math.max(0, options.petalsPer90Deg)\n\n  if (options.windroseLabels === \"compass\") {\n    const cardinalLabelStyle = { css: { font: \"bold 20px sans-serif\", fill: \"white\" }, radiusOffset: 16 }\n    const ordinalLabelStyle = { css: { font: \"normal 15px sans-serif\", fill: \"white\" }, radiusOffset: 16 }\n    const intermediateLabelStyle = { css: { font: \"italic 10px sans-serif\", fill: \"white\" }, radiusOffset: 16 }\n\n    directionLabels.push({ angle: 0, text: \"N\", style: cardinalLabelStyle });\n    directionLabels.push({ angle: 90, text: \"E\", style: cardinalLabelStyle });\n    directionLabels.push({ angle: 180, text: \"S\", style: cardinalLabelStyle });\n    directionLabels.push({ angle: 270, text: \"W\", style: cardinalLabelStyle });\n\n    directionLinesCount = 1;\n\n    if (options.cardinalLabels !== \"cardinal\") {\n      directionLabels.push({ angle: 45, text: \"NE\", style: ordinalLabelStyle });\n      directionLabels.push({ angle: 135, text: \"SE\", style: ordinalLabelStyle });\n      directionLabels.push({ angle: 225, text: \"SW\", style: ordinalLabelStyle });\n      directionLabels.push({ angle: 315, text: \"NW\", style: ordinalLabelStyle });\n      directionLinesCount = 2\n    }\n    if (options.cardinalLabels === \"intermediate\") {\n      directionLabels.push({ angle: 22.5, text: \"NNE\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 67.5, text: \"ENE\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 112.5, text: \"ESE\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 157.5, text: \"SSE\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 202.5, text: \"SSE\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 247.5, text: \"WSW\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 292.5, text: \"WNW\", style: intermediateLabelStyle });\n      directionLabels.push({ angle: 337.5, text: \"NNW\", style: intermediateLabelStyle });\n      directionLinesCount = 4\n    }\n  } else if (options.windroseLabels === \"degree\") {\n    const degreeLableStyle = { css: { font: \"normal 12px sans-serif\", fill: \"white\" }, radiusOffset: 16 }\n    let totalPetals = options.petalsPer90Deg * 4;\n    let angleDiff = 360 / totalPetals;\n    for (let i = 0; i < totalPetals; i++) {\n      let angle = angleDiff * i;\n      directionLabels.push({ angle: angle, text: angle + \"°\", style: degreeLableStyle });\n    }\n  }\n\n  let windSpeedUnit = getWindSpeedUnitLabel(options.windSpeedUnit);\n  let windroseLegend = <WindroseLegend bucketsSize={options.speedBucketsSize} bucketStyles={bucketStyles} changeStyle={setBucketStyles} windSpeedUnit={windSpeedUnit} />\n\n  return (\n    <div>\n      <Windrose\n        width={width} height={height} radius={windroseRadius} center={windroseCenter}\n        data={windData} bucketsCount={options.petalsPer90Deg} directionLabels={directionLabels}\n        styles={bucketStyles} changeStyle={setBucketStyles} tooltipDecimalPlaces={options.tooltipDecimalPlaces}\n        directionLinesCount={directionLinesCount} windSpeedUnit={windSpeedUnit} />\n      {options.showLegend && windroseLegend}\n    </div>\n\n  );\n};\n","import { PanelPlugin } from '@grafana/data';\nimport { WindroseOptions } from './types';\nimport { WindrosePanel } from './components/WindrosePanel';\n\nexport const plugin = new PanelPlugin<WindroseOptions>(WindrosePanel).setPanelOptions((builder) => {\n  return builder \n    .addSelect({\n      path: 'colorPalette',\n      name: 'Color palette',\n      description: 'Color palette of speed buckets.',\n      defaultValue: 'default',\n      settings: {\n        options: [   \n          {\n            value: 'default',\n            label: 'Default',\n          },   \n          {\n            value: 'operato',\n            label: 'Operato theme',\n          },  \n          {\n            value: 'greenred',\n            label: 'Green-red',\n          },    \n          {\n            value: 'bluered',\n            label: 'Blue-red',\n          },    \n          {\n            value: 'grayscale',\n            label: 'Gray scale',\n          },    \n          {\n            value: 'redscale',\n            label: 'Red scale',\n          },     \n          {\n            value: 'bluescale',\n            label: 'Blue scale',\n          }\n        ],\n      }\n    })\n    .addNumberInput({\n      path: 'petalsPer90Deg',\n      name: 'Petals per 90 degree',\n      description: 'How many petals should be per 90 degree. Total petals will be 4 times as many.',\n      defaultValue: 4\n    })\n    .addNumberInput({\n      path: 'speedBucketsCount',\n      name: 'Buckets per each petal.',\n      description: 'How many bucket should be per every direction bucket.',\n      defaultValue: 8\n    })\n    .addNumberInput({\n      path: 'speedBucketsSize',\n      name: 'Speed bucket size.',\n      description: 'Sets the size of each speed bucket (in m/s).',\n      defaultValue: 2\n    })\n    .addNumberInput({\n      path: 'tooltipDecimalPlaces',\n      name: 'Tooltip decimal places.',\n      description: 'How many decimal places should be displayed in tooltip.',\n      defaultValue: 1\n    })\n    .addSelect({\n      path: 'windSpeedUnit',\n      name: 'Wind speed unit',\n      description: 'What measurement unit will be used in legend and tooltip. !IMPORTANT! This will not convert values.',\n      defaultValue: 'ms',\n      settings: {\n        options: [\n          {\n            value: 'ms',\n            label: 'Meters per second (m/s)',\n          },          \n          {\n            value: 'kmh',\n            label: 'Kilometers per hour (km/h)',\n          },         \n          {\n            value: 'mps',\n            label: 'Miles per hour (mph)',\n          },         \n          {\n            value: 'ftps',\n            label: 'Feet per second (ft/s)',\n          },         \n          {\n            value: 'kt',\n            label: 'Knots (kt)',\n          },\n        ],\n      }\n    })\n    .addSelect({\n      path: 'windroseLabels',\n      name: 'Windrose labels',\n      defaultValue: 'compass',\n      settings: {\n        options: [\n          {\n            value: 'compass',\n            label: 'Compass directions',\n          },\n          {\n            value: 'degree',\n            label: 'Degrees of rotation',\n          }\n        ],\n      }\n    })\n    .addSelect({\n      path: 'cardinalLabels',\n      name: 'Cardinal labels',\n      defaultValue: 'cardinal',\n      settings: {\n        options: [\n          {\n            value: 'cardinal',\n            label: 'Cardinal directions (N,E,S,W)',\n          },\n          {\n            value: 'ordinal',\n            label: 'Ordinal directions (NE, SE, SW, NW)',\n          },\n          {\n            value: 'intermediate',\n            label: 'Intermediate directions (WNW, NNW, NNE ...)',\n          },\n        ],\n      },\n      showIf: (config) => config.windroseLabels === \"compass\"\n    })\n    .addBooleanSwitch({\n      path: 'showLegend',\n      name: 'Show Legend',\n      defaultValue: true\n    })\n    .addBooleanSwitch({\n      path: 'doesLegendOverlay',\n      name: 'Does Legend Overlap',\n      defaultValue: false,\n      showIf: (config) => config.showLegend\n    })\n    ;\n});\n","\nexport function getWindSpeedUnitLabel(menuOption: string) {\n    switch (menuOption) {\n        case \"ms\": return \"m/s\";\n        case \"kmh\": return \"km/h\";\n        case \"mps\": return \"mph\";\n        case \"ftps\": return \"ft/s\";\n        case \"kt\": return \"kt\";    \n        default: return \"N/A\";\n    }\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Svg","children","g","constructCakeSlice","centerAngle","angleOffset","circleCenter","startRadius","endRadius","polypoint","leftAngle","rightAngle","Math","cos","x","sin","y","degree","PI","i","righttLowX","righttLowY","createPetalLine","angle","radius","center","isBold","isDashed","innerCircleX","outerCircleX","innerCircleY","outerCircleY","line","x1","y1","x2","y2","strokeWidth","stroke","strokeDasharray","onMouseEnterPolygon","event","changeStyle","index","styles","newStyles","currentBucketStyle","selectedBucketStyle","currentStrokeStyle","highlightsStrokeStyle","onMouseLeavePolygon","idleBucketStyle","idleStrokeStyle","onMouseEnterDiv","onMouseLeaveDiv","Windrose","data","width","height","bucketsCount","tooltipDecimalPlaces","directionLabels","directionLinesCount","windSpeedUnit","petalNumber","linePetals","angleDiff","push","lineAngleDiff","oneDegreeInRad","max","round","petalBuckets","petalBucketHighlights","normalizedRadius","normalizedStartRadius","deg2rad","length","petalBucket","prevBucketSize","speedBucketLowerBound","speedBuckets","forEach","speedBucket","petalRelativeSize","rangeTooltip","polypointString","bucketStyle","div","speedUpperBound","tooltipContent","b","totalRelativeSize","pow","Tooltip","content","polygon","className","toString","onMouseEnter","onMouseLeave","points","fill","color","fillOpacity","opacity","bucketsStrokeStyle","style","pointerEvents","cardinalLabels","label","cardinalOffset","radiusOffset","text","css","dominantBaseline","textAnchor","percentLabelAngle","petalsPer90Degree","petalSizes","Array","petal","petalValuesCount","minSum","minIndex","petal1","petal2","determinePercentLabelAngle","circlesRings","topCirclesRings","percentLabels","ringRadius","currentRingRadius","circle","cx","cy","j","fontSize","labelFont","min","centerDistance","percent","maxPetalPercent","font","createCircleScale","svg","lerpNumber","n1","n2","t","clamp255","rgbToHex","slice","hexToRgb","hex","result","exec","map","parseInt","highlightColor","percentHighlight","h","s","v","rgbToHsv","_r","_g","_b","floor","f","p","q","hsvToRgb","colorLerp","c1","c2","sortToPetalBuckets","speedBucketSize","speedBucketCount","speedData","buckets","item","idx","nonEmptyBuckets","bucket","WindroseLegend","bucketsSize","bucketStyles","legendItems","bucketStart","icon","background","outline","borderRadius","margin","marginRight","marginLeft","speedLabel","display","position","bottom","right","border","padding","justifyContent","createDefaultStyles","colorPaleteId","speedBucketsCount","colorBar","colorCheckpointHexes","numberOfBuckets","colorCheckpoints","hexValue","lerpedColorHashes","checkpointCount","t_diff","idx1","idx2","t1","lerpedColor","createColorMap","getPredefinedColorPalette","constructingSpeedBucketStyles","highlightedColor","highlightedStrokeColor","plugin","PanelPlugin","options","_","useState","colorPalette","setBucketStyles","useEffect","windData","bucketsPer90Deg","totalBucketsCount","globalBound","dataPointsCount","speed","bucketSize","direction","windroseData","maxPetalSize","containedDataRatio","calculateWindroseData","weatherData","series","fields","values","field","name","extractData","petalsPer90Deg","speedBucketsSize","legendOffset","doesLegendOverlay","showLegend","windroseRadius","windroseCenter","windroseLabels","cardinalLabelStyle","ordinalLabelStyle","intermediateLabelStyle","degreeLableStyle","totalPetals","menuOption","getWindSpeedUnitLabel","windroseLegend","setPanelOptions","builder","addSelect","path","description","defaultValue","settings","addNumberInput","showIf","config","addBooleanSwitch"],"sourceRoot":""}